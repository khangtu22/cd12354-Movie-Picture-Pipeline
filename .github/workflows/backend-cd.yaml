name: backend-cd

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout Code

      - uses: actions/setup-python@v5
        name: Setup Python
        with:
          python-version: '3.10'

      - run: |
          pip install --user pipenv flake8
          cd backend
          pipenv install
        name: Install Dependencies
        working-directory: backend

      - run: pipenv run lint
        name: Run Linter
        working-directory: backend

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout Code

      - uses: actions/setup-python@v5
        name: Setup Python
        with:
          python-version: '3.10'

      - run: |
          pip install --user pipenv
          cd backend
          pipenv install
        name: Install Dependencies
        working-directory: backend

      - run: pipenv run test
        name: Run Tests
        working-directory: backend

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout Code

      - uses: actions/setup-python@v5
        name: Setup Python
        with:
          python-version: '3.10'

      - run: |
          pip install --user pipenv
          cd backend
          pipenv install
        name: Install Dependencies
        working-directory: backend

      - uses: aws-actions/configure-aws-credentials@v3
        name: Configure AWS Credentials
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - uses: aws-actions/amazon-ecr-login@v2
        name: Log in to Amazon ECR
        id: login-ecr

      - run: |
          docker build -t ${{ steps.login-ecr.outputs.registry }}/backend:${{ github.sha }} .
          docker push ${{ steps.login-ecr.outputs.registry }}/backend:${{ github.sha }}
        name: Build and Push Docker Image
        working-directory: backend

      - run: aws eks update-kubeconfig --name cluster --region us-east-1
        name: Update Kubeconfig

      - run: |
          kustomize edit set image backend=${{ steps.login-ecr.outputs.registry }}/backend:${{ github.sha }}
          kustomize build | kubectl apply -f -
        name: Update Kubernetes
        working-directory: backend/k8s