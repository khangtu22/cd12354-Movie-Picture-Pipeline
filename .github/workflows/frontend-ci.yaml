name: frontend-ci

on:
  workflow_dispatch:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout Code

      - uses: actions/setup-node@v4
        name: Setup Node.js
        with:
          node-version: 'latest'

      - uses: actions/cache@v3
        name: Cache Node Modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci
        name: Install Dependencies
        working-directory: frontend

      - run: npm run lint -- --fix
        name: Run Linter
        working-directory: frontend

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout Code

      - uses: actions/setup-node@v4
        name: Setup Node.js
        with:
          node-version: 'latest'

      - uses: actions/cache@v3
        name: Cache Node Modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci
        name: Install Dependencies
        working-directory: frontend

      - run: npm test
        name: Run Tests
        working-directory: frontend

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout Code

      - uses: actions/setup-node@v4
        name: Setup Node.js
        with:
          node-version: 'latest'

      - uses: actions/cache@v3
        name: Cache Node Modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci
        name: Install Dependencies
        working-directory: frontend

      - run: echo "REACT_APP_MOVIE_API_URL=http://localhost:5000" >> $GITHUB_ENV
        name: Set Environment Variable

      - run: docker build --build-arg REACT_APP_MOVIE_API_URL -t mp-frontend:latest .
        name: Build Docker Image
        working-directory: frontend

      - run: docker run --name mp-frontend -p 3000:3000 -d mp-frontend
        name: Run Docker Container
        working-directory: frontend